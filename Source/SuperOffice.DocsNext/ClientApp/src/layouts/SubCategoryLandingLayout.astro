---
import type { SubCategoryContentItem } from "../types/SubCategoryPageTypes";
import Base from "./Base.astro";
import type { TocData } from "../types/TableOfContentTypes";
import TableOfContentList from "@components/TableOfContentList";
import SubCategoryCard from "@components/SubCategoryCard.astro";
import { Breadcrumbs } from "astro-breadcrumbs";
import PageHeader from "@components/PageHeader.astro";
import "astro-breadcrumbs/breadcrumbs.css";

const { data, ToCData, lang, baseSlug, hasMultipleLanguages = false } = Astro.props;
const currentPath = Astro.url.pathname;

// Splits the currentPath string by / into an array. filter(Boolean) removes empty strings ("") caused by leading or trailing slashes.
const parts = currentPath.split("/").filter(Boolean);
const subcategory = parts.at(-1) ?? "";

// Set subcategory to subCategorySlug unless subcategory is "customization" or "administration",
const subCategorySlug = ["customization", "administration"].includes(subcategory) ? "" : subcategory;

const metadata = {
  title: data.title,
};

type Props = {
  data: SubCategoryContentItem;
  ToCData: TocData;
  lang: string;
  baseSlug: string;
  hasMultipleLanguages?: boolean;
};
---

<Base metadata={metadata} lang={lang}>
  {
    hasMultipleLanguages && (
      // page header is only rendered for subcategory pages are in multiple languages (only learn subcategory pages as of now)
      <div class="z-40 md:sticky md:top-[57px]">
        <PageHeader
          isLearnCategoryPage={hasMultipleLanguages}
        />
      </div>
    )
  }
  <article class="w-full pt-1 article">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-0">
      <nav
        class="bg-lightTealGray md:col-span-3 pt-5 md:pt-10 w-full max-w-md mx-auto rounded-lg flex flex-col items-center"
      >
        {
          !hasMultipleLanguages && (
            <div class="mb-6 flex items-center justify-self-start text-superOfficeGreen">
              <Breadcrumbs
                ariaLabel="A structured list of pages"
                linkTextFormat="sentence"
              >
                <svg
                  slot="separator"
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <polyline points="9 18 15 12 9 6" />
                </svg>
              </Breadcrumbs>
            </div>
          )
        }
        <div class="w-full max-w-lg mx-auto rounded-lg flex items-center">
          <TableOfContentList
            client:only="react"
            inputItems={ToCData.items}
            slug={baseSlug}
            isMainTable={true}
          />
        </div>
      </nav>

      <div class="w-full md:col-span-9 p-8 max-w-none mb-[140px] md:mb-[120px]">
        <div class="mb-6">
          <p class="text-2xl font-bold mb-1">
            {data.title}
          </p>
          <p class="">{data.summary}</p>
        </div>

        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-5 gap-y-7 auto-rows-max"
        >
          {
            data.landingContent.map((card) => {
              return (
                <SubCategoryCard subCategory={subCategorySlug} item={card} />
              );
            })
          }
        </div>
      </div>
    </div>
  </article>
</Base>
